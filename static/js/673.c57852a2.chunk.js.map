{"version":3,"file":"static/js/673.c57852a2.chunk.js","mappings":"2NACA,EAA8B,+BAA9B,EAA4E,gC,kBCwC5E,EArCkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OACE,0BACE,kBAAMH,SAZiB,SAAAI,GACzBA,EAAMC,iBACNL,EAASE,GACTC,EAAW,GACZ,EAQG,WACE,kBACEG,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,UAAWC,EACXC,MAAOV,EACPW,SAdkB,SAAAT,GACxBD,EAAWC,EAAMU,OAAOF,MACzB,KAcK,mBAAQN,KAAK,SAASI,UAAWC,EAAjC,wBAMP,E,iBCFD,EA9BqB,SAAC,GAAiB,IAAfI,EAAc,EAAdA,QAChBC,GAAWC,EAAAA,EAAAA,MAEjB,OAAKF,GAAYA,EAAQG,MAASH,EAAQG,KAAKH,SAI7C,8BACE,wBACGA,EAAQG,KAAKH,QAAQI,KAAI,SAAAC,GAAM,OAC9B,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAOE,IAAMC,MAAO,CAAEC,KAAMR,GAAjD,SACGI,EAAOK,SAFHL,EAAOE,GADc,QAL7B,IAeV,E,kBC0CD,EAxDe,WACb,OAA0CrB,EAAAA,EAAAA,UAAS,IAAnD,eAAOyB,EAAP,KAAsBC,EAAtB,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACQC,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAqBC,EAAAA,EAAAA,aAAW,mCACpC,WAAMjC,GAAN,gGAE2BkC,EAAAA,EAAAA,IAAA,0DAC8BlC,EAD9B,8CAF3B,OAEUmC,EAFV,OAKIV,EAAiBU,GACjBC,QAAQC,IAAIF,GACZR,EAAaW,IAAI,UAAWtC,GAC5B8B,EAAS,WAAD,OAAYH,EAAaY,aARrC,kDAUIH,QAAQC,IAAI,QAAZ,MAVJ,0DADoC,sDAcpC,CAACP,EAAUH,IA2Bb,OAxBAa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,uFACbb,EADa,0EAGOM,EAAAA,EAAAA,IAAA,8BACEN,EADF,8CAHP,OAGVO,EAHU,OAMhBC,QAAQC,IAAIF,GACZV,EAAiBU,GAPD,kDAShBC,QAAQC,IAAI,QAAZ,MATgB,0DAAH,qDAajBI,GACD,GAAE,CAACb,KAEJY,EAAAA,EAAAA,YAAU,WACR,IAAMxC,EAAU2B,EAAae,IAAI,WAC7B1C,GACFgC,EAAmBhC,EAEtB,GAAE,CAAC2B,EAAcK,KAGhB,4BACE,eAAIxB,UAAWmC,EAAAA,EAAAA,aAAf,qBACA,SAAC,EAAD,CAAW7C,SAAUkC,KACrB,mBACA,SAAC,EAAD,CAAcnB,QAASW,MAG5B,C,oBC9DD,KAAgB,aAAe,mC","sources":["webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.js","components/MovieResults/MovieResults.js","pages/Movies.js","webpack://react-homework-template/./src/pages/MoviesStyled.module.css?d0ea"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputStyled\":\"Searchbar_inputStyled__siLCR\",\"buttonStyled\":\"Searchbar_buttonStyled__F8SCt\"};","import SearchbarStyled from './Searchbar.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [request, setRequest] = useState('');\n\n  const handleSearchSubmit = event => {\n    event.preventDefault();\n    onSubmit(request);\n    setRequest('');\n  };\n\n  const handleInputChange = event => {\n    setRequest(event.target.value);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSearchSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          className={SearchbarStyled.inputStyled}\n          value={request}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\" className={SearchbarStyled.buttonStyled}>\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieResults = ({ results }) => {\n  const location = useLocation();\n\n  if (!results || !results.data || !results.data.results) {\n    return null;\n  }\n  return (\n    <section>\n      <ul>\n        {results.data.results.map(result => (\n          <li key={result.id}>\n            <Link to={`/movies/${result.id}`} state={{ from: location }}>\n              {result.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nMovieResults.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieResults;\n","import Searchbar from 'components/Searchbar/Searchbar';\nimport MovieResults from 'components/MovieResults/MovieResults';\nimport MoviesStyled from './MoviesStyled.module.css';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams] = useSearchParams();\n  const { itemId } = useParams();\n  const navigate = useNavigate();\n\n  const handleSearchSubmit = useCallback(\n    async request => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?query=${request}&api_key=2318a87e523df0b23f46c25d40d5fc09`\n        );\n        setSearchResults(response);\n        console.log(response);\n        searchParams.set('request', request);\n        navigate(`/movies?${searchParams.toString()}`);\n      } catch (error) {\n        console.log('error', error);\n      }\n    },\n    [navigate, searchParams]\n  );\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!itemId) return;\n      try {\n        const response = await axios.get(\n          `/search/movie?query=${itemId}&api_key=2318a87e523df0b23f46c25d40d5fc09`\n        );\n        console.log(response);\n        setSearchResults(response);\n      } catch (error) {\n        console.log('error', error);\n      }\n    };\n\n    fetchMovies();\n  }, [itemId]);\n\n  useEffect(() => {\n    const request = searchParams.get('request');\n    if (request) {\n      handleSearchSubmit(request);\n    }\n  }, [searchParams, handleSearchSubmit]);\n\n  return (\n    <div>\n      <h2 className={MoviesStyled.styled_title}>Movies</h2>\n      <Searchbar onSubmit={handleSearchSubmit} />\n      <br />\n      <MovieResults results={searchResults} />\n    </div>\n  );\n};\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"styled_title\":\"MoviesStyled_styled_title__Z2lg+\"};"],"names":["onSubmit","useState","request","setRequest","event","preventDefault","type","autoComplete","autoFocus","placeholder","className","SearchbarStyled","value","onChange","target","results","location","useLocation","data","map","result","to","id","state","from","title","searchResults","setSearchResults","useSearchParams","searchParams","itemId","useParams","navigate","useNavigate","handleSearchSubmit","useCallback","axios","response","console","log","set","toString","useEffect","fetchMovies","get","MoviesStyled"],"sourceRoot":""}