{"version":3,"file":"static/js/900.158eaf29.chunk.js","mappings":"oOACA,EAA4B,wBAA5B,EAAgE,wB,6CCmDhE,EA7Ca,WACX,IAAQA,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAkBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,6GAEKC,EAAAA,EAAAA,IAAA,6CACiBP,EADjB,sDAFL,OAEZQ,EAFY,OAKlBC,QAAQC,IAAIF,GACZJ,EAAQI,EAASG,KAAKR,MANJ,gDAQlBS,IAAAA,OAAAA,QACE,gQATgB,yDAAH,qDAanBN,GACD,GAAE,CAACN,IAECG,GAIH,gCACE,eAAIU,UAAWC,EAAf,kBACCX,EAAKY,KAAI,SAAAC,GAAK,OACb,eAAmBH,UAAWC,EAA9B,SACGE,EAAMC,MADAD,EAAME,GADF,QALV,wGAYV,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_text\":\"Cast_cast_text__yOs+U\",\"cast_list\":\"Cast_cast_list__6yHmm\"};","import React, { useEffect, useState } from 'react';\nimport CastStyled from './Cast.module.css';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst Cast = () => {\n  const { itemId } = useParams();\n  const [cast, setCast] = useState(null);\n  useEffect(() => {\n    const fetchCastData = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${itemId}/credits?api_key=2318a87e523df0b23f46c25d40d5fc09`\n        );\n        console.log(response);\n        setCast(response.data.cast);\n      } catch (error) {\n        Notiflix.Notify.failure(\n          'Нажаль виникла помилка. Спробуйте змінити запит'\n        );\n      }\n    };\n    fetchCastData();\n  }, [itemId]);\n\n  if (!cast) {\n    return <div>Завантаження...</div>;\n  }\n  return (\n    <section>\n      <h4 className={CastStyled.cast_text}>Cast</h4>\n      {cast.map(actor => (\n        <li key={actor.id} className={CastStyled.cast_list}>\n          {actor.name}\n        </li>\n      ))}\n    </section>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Cast;\n"],"names":["itemId","useParams","useState","cast","setCast","useEffect","fetchCastData","axios","response","console","log","data","Notiflix","className","CastStyled","map","actor","name","id"],"sourceRoot":""}